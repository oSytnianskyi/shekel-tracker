plugins {
    id 'java'
    id 'io.quarkus'
    id "net.ltgt.errorprone" version "2.0.2"
}

group 'com.stni'
version '1.0'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:quarkus-amazon-services-bom:${quarkusPlatformVersion}")
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")

    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-config-yaml'
    implementation 'io.quarkus:quarkus-smallrye-openapi'

    implementation 'software.amazon.awssdk:url-connection-client'
    implementation 'io.quarkiverse.amazonservices:quarkus-amazon-dynamodb'
    implementation 'io.quarkiverse.amazonservices:quarkus-amazon-dynamodb-enhanced'

    implementation 'io.quarkus:quarkus-oidc'
    implementation 'io.quarkus:quarkus-smallrye-jwt'

    implementation 'io.quarkus:quarkus-rest-client'
    implementation 'io.quarkus:quarkus-rest-client-jackson'

    implementation 'io.quarkus:quarkus-resteasy'
    implementation 'io.quarkus:quarkus-resteasy-jackson'

    implementation 'org.apache.commons:commons-lang3:3.11'
    implementation 'org.apache.commons:commons-collections4:4.4'

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

    errorprone 'com.google.errorprone:error_prone_core:2.18.0'
    errorproneJavac "com.google.errorprone:javac:9+181-r4173-1"
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

test {
    useJUnitPlatform()
}

compileJava {
    options.compilerArgs = [
            '-Amapstruct.unmappedTargetPolicy=ERROR',
            '-Amapstruct.defaultComponentModel=cdi',
            '-parameters'
    ]
    options.encoding = 'UTF-8'
}

import net.ltgt.gradle.errorprone.CheckSeverity

tasks.withType(JavaCompile) {
    options.errorprone {
        disableAllWarnings = true
        enabled = false
        // disable warnings in generated code; AutoValue code fails UnnecessaryParentheses check
        disableWarningsInGeneratedCode = true
        excludedPaths = ".*/build/generated/.*"
        check("WildcardImport", CheckSeverity.ERROR)
        check("RemoveUnusedImports", CheckSeverity.ERROR)
        check("FieldCanBeFinal", CheckSeverity.OFF)
        check("ConstantField", CheckSeverity.ERROR)
        check("UnusedMethod", CheckSeverity.ERROR)
        check("UnusedVariable", CheckSeverity.ERROR)
        check("ReturnsNullCollection", CheckSeverity.ERROR)
        check("UnnecessaryBoxedVariable", CheckSeverity.ERROR)
        check("UnnecessaryBoxedAssignment", CheckSeverity.ERROR)
        check("UngroupedOverloads", CheckSeverity.ERROR)
        check("SwitchDefault", CheckSeverity.ERROR)
        check("PrivateConstructorForUtilityClass", CheckSeverity.ERROR)
        check("UseEnumSwitch", CheckSeverity.ERROR)
        check("MultipleTopLevelClasses", CheckSeverity.ERROR)
        check("UnnecessaryStaticImport", CheckSeverity.ERROR)
        check("JavaTimeDefaultTimeZone", CheckSeverity.OFF)
        check("BadImport", CheckSeverity.ERROR)
    }
}
